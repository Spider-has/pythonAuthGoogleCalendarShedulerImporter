# services/schedule_downloader.py
import requests
from datetime import datetime, timedelta
from typing import List

class ScheduleDownloader:
    BASE_URL = "https://ruz.spbstu.ru/faculty/125/groups/42681/ical"

    @staticmethod
    def get_monday_of_week(date: datetime) -> datetime:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –Ω–µ–¥–µ–ª–∏ –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–π –¥–∞—Ç—ã."""
        return date - timedelta(days=date.weekday())

    def download_ics_for_weeks(self, weeks_ahead: int) -> List[str]:
        """
        –°–∫–∞—á–∏–≤–∞–µ—Ç .ics-–∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏ –∏ `weeks_ahead` –Ω–µ–¥–µ–ª—å –≤–ø–µ—Ä—ë–¥.
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ (–∫–æ–Ω—Ç–µ–Ω—Ç –∫–∞–∂–¥–æ–≥–æ .ics).
        """
        if weeks_ahead < 1:
            raise ValueError("weeks_ahead –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å >= 1")

        contents = []
        today = datetime.now()
        
        for i in range(weeks_ahead):
            monday = self.get_monday_of_week(today + timedelta(weeks=i))
            date_str = monday.strftime("%Y-%m-%d")
            url = f"{self.BASE_URL}?date={date_str}"
            
            print(f"üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –Ω–µ–¥–µ–ª—é —Å {date_str}...")
            try:
                response = requests.get(url)
                response.raise_for_status()
                contents.append(response.text)
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {date_str}: {e}")

        return contents